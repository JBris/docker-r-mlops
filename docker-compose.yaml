version: "3.7"

services:

  rstudio:
    image: "ghcr.io/${CONTAINER_REG_USER}/${CONTAINER_TIDYMODELS_REG_NAME}:latest"
    container_name: "${PROJECT_NAME}_rstudio"
    hostname: rstudio
    stop_grace_period: 60s
    restart: always
    environment:
      USER: $R_STUDIO_USER
      PASSWORD: $R_STUDIO_PASSWORD
      ROOT: "TRUE"
      DISABLE_AUTH: "TRUE"
      R_SEED: $R_SEED
    ports:
      - ${R_STUDIO_PORT}:8787 
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./tutorials:/home/user

  mlflow:
    image: "ghcr.io/${CONTAINER_REG_USER}/${CONTAINER_MLFOW_REG_NAME}:latest"
    container_name: "${PROJECT_NAME}_mlflow"
    hostname: mlflow
    restart: always
    stop_grace_period: 60s
    environment:
      MLFLOW_LABEL: $MLFLOW_LABEL
      MLFLOW_BACKEND_STORE_URI: $MLFLOW_BACKEND_STORE_URI
    ports:
      - ${MLFLOW_PORT}:5000
    depends_on:
      - postgres
    volumes:
      - ./data/mlflow:/mlflow
    command: >
      mlflow server --serve-artifacts --host 0.0.0.0 --port 5000 --backend-store-uri "${MLFLOW_BACKEND_STORE_URI}" --default-artifact-root file:/mlflow/mlruns

  postgres:
    image: "postgres:${POSTGRES_TAG}"
    container_name: "${PROJECT_NAME}_postgres"
    hostname: postgres
    restart: always
    stop_grace_period: 60s
    environment:
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_DB: $DB_NAME
      POSTGRES_USER: $DB_USER
    ports:
      - ${DB_PORT}:5432
    volumes:
      - ./data/postgres:/var/lib/postgresql/data

  adminer:
    image: "adminer:${ADMINER_TAG}"
    container_name: "${PROJECT_NAME}_adminer"
    stop_grace_period: 60s
    restart: always
    ports:
      - ${ADMINER_PORT}:8080

networks:
  default:
      name: docker-r-mlops
